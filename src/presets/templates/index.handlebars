{{>partials_head}}
<body>
  <div id="layout">
    {{> partials_topbar }}

    <div style="padding: 1em 0.5em 0 0.5em;">
      <form
        id="statusUseForm"
        method="POST"
        action="{{ route "statusUse" ?status_emoji="" ?status_text="" }}"
      >
        <input type="hidden" name="_csrf" value="{{@csrfToken}}">
        <ul class="flex flex-row list pa0">
          {{#each account.oauths}}
            <li>
              <label>
                {{#if (eq service "slack")}}
                  <input type="checkbox" name="slack_oauth_id" value="{{oauth_id}}" checked>
                {{/if}}
                {{#if (eq service "github")}}
                  <input type="checkbox" name="github_oauth_id" value="{{oauth_id}}" checked>
                {{/if}}
                <span class="icon-group">
                  {{#if (eq service "slack")}}
                    <img
                      src="{{profile.image_72}}"
                      {{#if profile.display_name}}
                        alt="{{profile.display_name}} ({{team.name}})"
                      {{else}}
                        alt="{{profile.real_name}} ({{team.name}})"
                      {{/if}}
                    >
                    {{#unless team.icon.image_default}}
                      <img
                        src="{{team.icon.image_44}}"
                        alt="{{team.name}}"
                        class="team-icon"
                      >
                    {{/unless}}
                  {{/if}}
                  {{#if (eq service "github")}}
                    <img
                      src="{{profile.image_72}}"
                      {{#if profile.name}}
                        alt="{{profile.name}}"
                      {{else}}
                        alt="{{profile.login}}"
                      {{/if}}
                    >
                    <img
                      src="https://github.githubassets.com/apple-touch-icon.png"
                      class="team-icon"
                    >
                  {{/if}}
                </span>
              </label>
            </li>
          {{/each}}
        </ul>
        <button type="submit">clear</button>
      </form>

      <form
        class="preset-row status-form"
        method="post"
        action="{{ route "presetSave" }}"
      >
        <input type="hidden" name="_csrf" value="{{@csrfToken}}">
        {{! chrome doesn't support flexbox in `<fieldset>` }}
        <div role="group" class="status">
          <label for="status-form-status_emoji" class="status_emoji empty-emoji">
            <span class="current-emoji">&nbsp;</span>
          </label>
          <input
            id="status-form-status_emoji"
            type="text"
            name="status_emoji"
            list="emoji_datalist"
            aria-label="emoji"
            placeholder="emoji"
          >
          <hr>
          <input
            type="text"
            name="status_text"
            placeholder="text"
            class="status_text"
          >
        </div>
        <div style="width: 0.5em;"></div>
        <button type="submit" class="primary">save</button>
      </form>

      {{#each presets}}
        <div class="flex flex-column pb3">
          <span>{{!-- current status --}}</span>
          <div class="flex flex-row justify-between items-center">
            <a
              class="flex flex-row"
              href="{{ route "statusIndex"
                ?status_emoji=status_emoji
                ?status_text=status_text }}"
            >
              <span class="status">
                {{>partials_status .}}
              </span>
              <span
                class="deeper"
                role="presentation"
              >❯</span>
            </a>

            <div class="flex">
              {{#if custom_emoji}}
                {{! TODO }}
              {{else}}
                <button
                  type="submit"
                  form="statusUseForm"
                  formaction="{{ route "statusUse" ?status_emoji=status_emoji ?status_text=status_text }}"
                >use</button>
              {{/if}}
            </div>
          </div>
        </div>
      {{/each}}
    </div>

    {{> partials_footer . }}
  </div>

  <datalist id="emoji_datalist">
    {{#each emoji_options}}
      <option value="{{name}}" data-html="{{html}}"></option>
    {{/each}}
  </datalist>

  <script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
      var INSIDE_COLONS_REGEX = /^:[^:]+:$/;
      function getDatalistOption(list, value) {
        value = value.trim();

        if (value && value.match(INSIDE_COLONS_REGEX)) {
          value = value.slice(1, value.length - 1);
          return list.querySelector('[value="' + value +'"]');
        }

        // `data-html` for native emoji's is the emoji itself
        return list.querySelector('[value="' + value +'"], [data-html="' + value + '"]');
      }

      function updateCurrentEmoji(event) {
        var form = event.target.form;
        var value = event.target.value.trim();

        if (!value) {
          event.target.setCustomValidity("");
          form.querySelector('.status_emoji').classList.add("empty-emoji");
          form.querySelector('.current-emoji').innerHTML = "&nbsp;"
          return;
        }

        var datalistOption = getDatalistOption(event.target.list, value);
        form.querySelector('.status_emoji').classList.remove("empty-emoji");

        if (datalistOption) {
          event.target.setCustomValidity("");
          form.querySelector('.current-emoji').innerHTML = datalistOption.dataset.html;
        } else {
          event.target.setCustomValidity("emoji not found");
          form.querySelector('.current-emoji').innerHTML = "<div style='color: red'>☹︎</div>";
          form.querySelector('.current-emoji').title = event.target.validationMessage;
          event.target.reportValidity();
        }
      }

      Array.prototype.forEach.call(
        document.querySelectorAll('input[list="emoji_datalist"]'),
        function (input) {
          input.addEventListener("change", updateCurrentEmoji);
        }
      )

      function updateRequiredFields(event) {
        var form = event.target.form;

        if (form.status_text.value) {
          form.status_emoji.removeAttribute("required");
        } else {
          form.status_emoji.setAttribute("required", "required");
        }

        if (form.status_emoji.value) {
          form.status_text.removeAttribute("required");
        } else {
          form.status_text.setAttribute("required", "required");
        }
      }

      Array.prototype.forEach.call(
        document.querySelectorAll('form.status-form'),
        function (form) {
          updateRequiredFields({ target: { form: form }});
          form.status_text.addEventListener("input", updateRequiredFields);
          form.status_emoji.addEventListener("input", updateRequiredFields);
        }
      )
    });
  </script>
</body>
